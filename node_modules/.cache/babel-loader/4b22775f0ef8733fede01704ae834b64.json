{"ast":null,"code":"import _defineProperty from \"/home/loozis/Documents/my-own-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst REST_API_URL = \"http://frontend-recruitment.one2tribe.pl:8080\";\nconst AUTH_OPTIONS = {\n  credentials: \"include\",\n  mode: \"cors\"\n};\nexport const authenticate = async () => {\n  const body = JSON.stringify({\n    username: \"YNAPEyJk\",\n    password: \"ylYJDgFmnAIs\"\n  });\n  let bearer = '';\n  const response = await fetch(\"\".concat(REST_API_URL, \"/api/authenticate\"), _objectSpread({\n    method: \"post\"\n  }, AUTH_OPTIONS, {\n    body,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  })).then(resp => {\n    resp.headers.forEach(header => {\n      const bearerRegex = /Bearer/;\n\n      if (bearerRegex.exec(header)) {\n        bearer = header;\n      } else {\n        return;\n      }\n    });\n  });\n  return bearer;\n};\nexport const retrieveItems = async bearer => {\n  const response = await fetch(\"\".concat(REST_API_URL, \"/api/v1/item\"), _objectSpread({}, AUTH_OPTIONS, {\n    headers: {\n      Authorization: bearer,\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  }));\n  return response.json();\n};\nexport const addItem = async (item, bearer) => {\n  const response = await fetch(\"\".concat(REST_API_URL, \"/api/v1/item\"), _objectSpread({\n    method: \"post\"\n  }, AUTH_OPTIONS, {\n    body: JSON.stringify(item),\n    headers: {\n      Authorization: bearer,\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  }));\n  console.log(response);\n  return response;\n};\nexport const main = async () => {\n  const token = await authenticate();\n  const items = await retrieveItems();\n  return {\n    items,\n    token\n  };\n};","map":{"version":3,"sources":["/home/loozis/Documents/my-own-app/src/services/AuthService.js"],"names":["REST_API_URL","AUTH_OPTIONS","credentials","mode","authenticate","body","JSON","stringify","username","password","bearer","response","fetch","method","headers","Accept","then","resp","forEach","header","bearerRegex","exec","retrieveItems","Authorization","json","addItem","item","console","log","main","token","items"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG,+CAArB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,SADM;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,OAAO,MAAMC,YAAY,GAAG,YAAY;AACtC,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BC,IAAAA,QAAQ,EAAE,UADgB;AAE1BC,IAAAA,QAAQ,EAAE;AAFgB,GAAf,CAAb;AAKA,MAAIC,MAAM,GAAG,EAAb;AAEA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,WAAIZ,YAAJ;AAC1Ba,IAAAA,MAAM,EAAE;AADkB,KAEvBZ,YAFuB;AAG1BI,IAAAA,IAH0B;AAI1BS,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE;AAFD;AAJiB,KAAL,CAQpBC,IARoB,CAQfC,IAAI,IAAI;AACdA,IAAAA,IAAI,CAACH,OAAL,CAAaI,OAAb,CAAsBC,MAAD,IAAY;AAEjC,YAAMC,WAAW,GAAG,QAApB;;AAEA,UAAIA,WAAW,CAACC,IAAZ,CAAiBF,MAAjB,CAAJ,EAA8B;AAC9BT,QAAAA,MAAM,GAAGS,MAAT;AACC,OAFD,MAEO;AAAE;AAAQ;AAAC,KANlB;AAQC,GAjBoB,CAAvB;AAmBA,SAAOT,MAAP;AACC,CA5BI;AA8BP,OAAO,MAAMY,aAAa,GAAG,MAAOZ,MAAP,IAAkB;AAC7C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,WAAIZ,YAAJ,qCACzBC,YADyB;AAE5Ba,IAAAA,OAAO,EAAE;AACTS,MAAAA,aAAa,EAAEb,MADN;AAET,sBAAgB,kBAFP;AAGTK,MAAAA,MAAM,EAAE;AAHC;AAFmB,KAA5B;AASA,SAAOJ,QAAQ,CAACa,IAAT,EAAP;AACC,CAXI;AAaL,OAAO,MAAMC,OAAO,GAAG,OAAOC,IAAP,EAAahB,MAAb,KAAwB;AAC/C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,WAAIZ,YAAJ;AAC5Ba,IAAAA,MAAM,EAAE;AADoB,KAEzBZ,YAFyB;AAG5BI,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAemB,IAAf,CAHsB;AAI5BZ,IAAAA,OAAO,EAAE;AACTS,MAAAA,aAAa,EAAEb,MADN;AAET,sBAAgB,kBAFP;AAGTK,MAAAA,MAAM,EAAE;AAHC;AAJmB,KAA5B;AAUAY,EAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AACA,SAAOA,QAAP;AACC,CAbM;AAeT,OAAO,MAAMkB,IAAI,GAAG,YAAY;AAC9B,QAAMC,KAAK,GAAG,MAAM1B,YAAY,EAAhC;AACA,QAAM2B,KAAK,GAAG,MAAMT,aAAa,EAAjC;AAEA,SAAO;AAAES,IAAAA,KAAF;AAASD,IAAAA;AAAT,GAAP;AACD,CALM","sourcesContent":["const REST_API_URL = \"http://frontend-recruitment.one2tribe.pl:8080\";\nconst AUTH_OPTIONS = {\n  credentials: \"include\",\n  mode: \"cors\"\n};\n\nexport const authenticate = async () => {\n  const body = JSON.stringify({\n    username: \"YNAPEyJk\",\n    password: \"ylYJDgFmnAIs\"\n  });\n\n  let bearer = ''\n\n  const response = await fetch(`${REST_API_URL}/api/authenticate`, {\n    method: \"post\",\n    ...AUTH_OPTIONS,\n    body,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  }).then(resp => {\n    resp.headers.forEach((header) => {\n    \n    const bearerRegex = /Bearer/\n    \n    if (bearerRegex.exec(header)) {\n    bearer = header\n    } else { return }}\n    )\n    })\n  \n  return bearer;\n  };\n\nexport const retrieveItems = async (bearer) => {\n  const response = await fetch(`${REST_API_URL}/api/v1/item`, {\n  ...AUTH_OPTIONS,\n  headers: {\n  Authorization: bearer,\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\"\n  }\n  });\n  \n  return response.json();\n  };\n  \n  export const addItem = async (item, bearer) => {\n  const response = await fetch(`${REST_API_URL}/api/v1/item`, {\n  method: \"post\",\n  ...AUTH_OPTIONS,\n  body: JSON.stringify(item),\n  headers: {\n  Authorization: bearer,\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\"\n  }\n  });\n  console.log(response)\n  return response\n  };\n\nexport const main = async () => {\n  const token = await authenticate()\n  const items = await retrieveItems();\n\n  return { items, token }\n};"]},"metadata":{},"sourceType":"module"}