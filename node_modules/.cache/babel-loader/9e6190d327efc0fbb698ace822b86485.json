{"ast":null,"code":"import _defineProperty from \"/home/loozis/Documents/lucjan-kepinski-aplikacja/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst REST_API_URL = \"http://frontend-recruitment.one2tribe.pl:8080\";\nconst AUTH_OPTIONS = {\n  credentials: \"include\",\n  mode: \"cors\"\n};\nlet bearer = \"\";\nexport const authenticate = async () => {\n  const body = JSON.stringify({\n    username: \"YNAPEyJk\",\n    password: \"ylYJDgFmnAIs\"\n  });\n  await fetch(\"\".concat(REST_API_URL, \"/api/authenticate\"), _objectSpread({\n    method: \"post\"\n  }, AUTH_OPTIONS, {\n    body,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  })).then(resp => {\n    resp.headers.forEach(header => {\n      const bearerRegex = /Bearer/;\n\n      if (bearerRegex.exec(header)) {\n        bearer = header;\n      } else {\n        return;\n      }\n    });\n  });\n  return bearer;\n};\nexport const retrieveItems = async bearer => {\n  const response = await fetch(\"\".concat(REST_API_URL, \"/api/v1/item\"), _objectSpread({}, AUTH_OPTIONS, {\n    headers: {\n      Authorization: bearer,\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  }));\n  return response.json();\n};\nexport const addItem = async (item, bearer) => {\n  const response = await fetch(\"\".concat(REST_API_URL, \"/api/v1/item\"), _objectSpread({\n    method: \"post\"\n  }, AUTH_OPTIONS, {\n    body: JSON.stringify(item),\n    headers: {\n      Authorization: bearer,\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  }));\n  return response;\n};\nexport const main = async () => {\n  const token = await authenticate();\n  const items = await retrieveItems(bearer);\n  return {\n    items,\n    token\n  };\n};","map":{"version":3,"sources":["/home/loozis/Documents/lucjan-kepinski-aplikacja/src/services/AuthService.js"],"names":["REST_API_URL","AUTH_OPTIONS","credentials","mode","bearer","authenticate","body","JSON","stringify","username","password","fetch","method","headers","Accept","then","resp","forEach","header","bearerRegex","exec","retrieveItems","response","Authorization","json","addItem","item","main","token","items"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG,+CAArB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,SADM;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,IAAIC,MAAM,GAAG,EAAb;AAEA,OAAO,MAAMC,YAAY,GAAG,YAAY;AACtC,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BC,IAAAA,QAAQ,EAAE,UADgB;AAE1BC,IAAAA,QAAQ,EAAE;AAFgB,GAAf,CAAb;AAKA,QAAMC,KAAK,WAAIX,YAAJ;AACTY,IAAAA,MAAM,EAAE;AADC,KAENX,YAFM;AAGTK,IAAAA,IAHS;AAITO,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE;AAFD;AAJA,KAAL,CAQHC,IARG,CAQEC,IAAI,IAAI;AACdA,IAAAA,IAAI,CAACH,OAAL,CAAaI,OAAb,CAAqBC,MAAM,IAAI;AAC7B,YAAMC,WAAW,GAAG,QAApB;;AAEA,UAAIA,WAAW,CAACC,IAAZ,CAAiBF,MAAjB,CAAJ,EAA8B;AAC5Bd,QAAAA,MAAM,GAAGc,MAAT;AACD,OAFD,MAEO;AACL;AACD;AACF,KARD;AASD,GAlBK,CAAN;AAoBA,SAAOd,MAAP;AACD,CA3BM;AA6BP,OAAO,MAAMiB,aAAa,GAAG,MAAMjB,MAAN,IAAgB;AAC3C,QAAMkB,QAAQ,GAAG,MAAMX,KAAK,WAAIX,YAAJ,qCACvBC,YADuB;AAE1BY,IAAAA,OAAO,EAAE;AACPU,MAAAA,aAAa,EAAEnB,MADR;AAEP,sBAAgB,kBAFT;AAGPU,MAAAA,MAAM,EAAE;AAHD;AAFiB,KAA5B;AASA,SAAOQ,QAAQ,CAACE,IAAT,EAAP;AACD,CAXM;AAaP,OAAO,MAAMC,OAAO,GAAG,OAAOC,IAAP,EAAatB,MAAb,KAAwB;AAC7C,QAAMkB,QAAQ,GAAG,MAAMX,KAAK,WAAIX,YAAJ;AAC1BY,IAAAA,MAAM,EAAE;AADkB,KAEvBX,YAFuB;AAG1BK,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAekB,IAAf,CAHoB;AAI1Bb,IAAAA,OAAO,EAAE;AACPU,MAAAA,aAAa,EAAEnB,MADR;AAEP,sBAAgB,kBAFT;AAGPU,MAAAA,MAAM,EAAE;AAHD;AAJiB,KAA5B;AAWA,SAAOQ,QAAP;AACD,CAbM;AAeP,OAAO,MAAMK,IAAI,GAAG,YAAY;AAC9B,QAAMC,KAAK,GAAG,MAAMvB,YAAY,EAAhC;AACA,QAAMwB,KAAK,GAAG,MAAMR,aAAa,CAACjB,MAAD,CAAjC;AAEA,SAAO;AAAEyB,IAAAA,KAAF;AAASD,IAAAA;AAAT,GAAP;AACD,CALM","sourcesContent":["const REST_API_URL = \"http://frontend-recruitment.one2tribe.pl:8080\";\nconst AUTH_OPTIONS = {\n  credentials: \"include\",\n  mode: \"cors\"\n};\n\nlet bearer = \"\";\n\nexport const authenticate = async () => {\n  const body = JSON.stringify({\n    username: \"YNAPEyJk\",\n    password: \"ylYJDgFmnAIs\"\n  });\n\n  await fetch(`${REST_API_URL}/api/authenticate`, {\n    method: \"post\",\n    ...AUTH_OPTIONS,\n    body,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  }).then(resp => {\n    resp.headers.forEach(header => {\n      const bearerRegex = /Bearer/;\n\n      if (bearerRegex.exec(header)) {\n        bearer = header;\n      } else {\n        return;\n      }\n    });\n  });\n\n  return bearer;\n};\n\nexport const retrieveItems = async bearer => {\n  const response = await fetch(`${REST_API_URL}/api/v1/item`, {\n    ...AUTH_OPTIONS,\n    headers: {\n      Authorization: bearer,\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  });\n\n  return response.json();\n};\n\nexport const addItem = async (item, bearer) => {\n  const response = await fetch(`${REST_API_URL}/api/v1/item`, {\n    method: \"post\",\n    ...AUTH_OPTIONS,\n    body: JSON.stringify(item),\n    headers: {\n      Authorization: bearer,\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  });\n\n  return response;\n};\n\nexport const main = async () => {\n  const token = await authenticate();\n  const items = await retrieveItems(bearer);\n\n  return { items, token };\n};\n"]},"metadata":{},"sourceType":"module"}